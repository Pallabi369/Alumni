plugins {
  id 'java'
  id 'org.springframework.boot'
  id 'io.spring.dependency-management'
  id 'jacoco'
}

dependencies {
  implementation project(':alumni-common')

  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  implementation 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations'
  implementation 'commons-codec:commons-codec'
  implementation libs.plugin.core
  implementation libs.plugin.metadata
  implementation libs.microsoft.graph
  implementation libs.azure.identity
  implementation libs.mapstruct
  implementation libs.openapi.ui
  implementation libs.gson
  implementation libs.mongodb.encrypt

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  annotationProcessor libs.mapstruct.processor
}

compileJava {
  options.compilerArgs += [
      '-Amapstruct.suppressGeneratorTimestamp=true',
      '-Amapstruct.suppressGeneratorVersionInfoComment=true',
      '-Amapstruct.verbose=true',
      '-Amapstruct.defaultComponentModel=spring'
  ]
}

bootJar {
  enabled = false
}

bootBuildImage {
  enabled = false
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = true
  }
}
