plugins {
  id 'java'
  id 'org.springframework.boot'
  id 'io.spring.dependency-management'
  id 'io.gatling.gradle' version '3.7.4'
  id 'com.github.jk1.dependency-license-report' version '2.0'
}

version = System.getenv('BUILD_SOURCEVERSION') ?: '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

dependencies {
  implementation project(":alumni-sync-core")
  implementation project(':alumni-common')

  implementation "dev.zalaris:zalaris-spring-boot-starter-sync:${syncVersion}"

  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
  implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

  implementation libs.logstash.logback.encoder

  runtimeClasspath libs.insights.agent

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
  useJUnitPlatform()
}

bootBuildImage {
  imageName = "zalaris.azurecr.io/alumni/alumni-sync-app:${project.version}"
  tags = ["zalaris.azurecr.io/alumni/alumni-sync-app:latest"]
  environment = [
      'BPE_APPEND_JAVA_TOOL_OPTIONS' : ' -javaagent:/workspace/BOOT-INF/lib/applicationinsights-agent-3.2.10.jar'
  ]
}


import com.github.jk1.license.render.JsonReportRenderer
import com.github.jk1.license.render.SimpleHtmlReportRenderer

licenseReport {
  renderers = [new JsonReportRenderer(), new SimpleHtmlReportRenderer()]
}
